#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : COL_Contacts
 major_version : 28
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x1fda102311d080c1
 internal_properties : CAAAAAgAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  type_code : 31
  p_codes :
   -
     code : |1+
      
      gtaListeContact est un tableau associatif (*, *, wlEntier_8) de cContact dynamique
     type : 720896
  procedures :
   -
     name : Contact_Ajoute
     procedure_id : 2295164771627024474
     type_code : 15
     code : |1-
      // Résumé : Ajoute un contact
      // Syntaxe :
      //[ <Résultat> = ] Contact_Ajoute (<pclContact> est cContact dynamique)
      //
      // Paramètres :
      //	pclContact (cContact dynamique) : <indiquez ici le rôle de pclContact>
      // Valeur de retour :
      // 	entier : ID du contact ajouté
      
      PROCÉDURE Contact_Ajoute(pclContact est un cContact dynamique)
      
      nIDContactAjouté est un entier = pclContact.sauvegarde()
      
      // Sauvegarde le contact
      gtaListeContact[nIDContactAjouté] = pclContact
      
      renvoyer nIDContactAjouté
     type : 458752
   -
     name : Contact_Existe
     procedure_id : 2295164775922057728
     type_code : 15
     code : |1+
      // Résumé : Permet de vérifier si un contact existe déjà
      // Syntaxe :
      //[ <Résultat> = ] Contact_Existe (<sAdresseEmail>)
      //
      // Paramètres :
      //	sAdresseEmail : Adresse email à vérifier
      // Valeur de retour :
      // 	booléen :   // 	Aucune
      
      PROCÉDURE Contact_Existe(LOCAL sAdresseEmail)
      
      // Charge, si pas chargé
      SI gtaListeContact..Occurrence = 0 ALORS
      	Contact_ChargeListe()
      FIN
      
      bTrouve est un booléen = Faux
      
      POUR TOUT pclContact DE gtaListeContact
      	SI pclContact.Email = sAdresseEmail ALORS
      		bTrouve = Vrai
      		SORTIR
      	FIN
      FIN
      
      RENVOYER bTrouve
      
      
     type : 458752
   -
     name : Contact_Supprime
     procedure_id : 2295164775922123592
     type_code : 15
     code : |1-
      // Résumé : Supprime un contact
      // Syntaxe :
      //Contact_Supprime (<nIDContact> est entier sur 8 octets)
      //
      // Paramètres :
      //	nIDContact (entier sur 8 octets) : <indiquez ici le rôle de nIDContact>
      // Valeur de retour :
      // 	Aucune
      //// Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      PROCÉDURE Contact_Supprime(LOCAL nIDContact est un entier sur 8)
      
      // Sauvegarde contexte
      nPosition est un entier = HSauvePosition(Contact,"*",hSauveRubriques)
      
      // Positionnement
      HLitRecherchePremier(Contact,IDContact,nIDContact)
      dbgAssertion(HTrouve(Contact),"Impossible de trouver le contact")
      
      // Supprime de la liste
      Supprime(gtaListeContact, nIDContact)
      
      // Suppression
      HSupprime(Contact)
      
      FIN:
      	HRetourPosition(nPosition)
     type : 458752
   -
     name : Contact_Lire
     procedure_id : 2295164775922189472
     type_code : 15
     code : |1+
      // Résumé : Retourne un contact
      // Syntaxe :
      //[ <Résultat> = ] Contact_Lire (<nIDContact>)
      //
      // Paramètres :
      //	nIDContact : <indiquez ici le rôle de nIDContact>
      // Valeur de retour :
      // 	Type indéterminé : // 	Aucune
      //// Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      PROCÉDURE Contact_Lire(LOCAL nIDContact)
      
      // Charge, si pas chargé
      SI gtaListeContact..Occurrence = 0 ALORS
      	Contact_ChargeListe()
      FIN
      
      SI gtaListeContact[nIDContact].. Vide ALORS
      	dbgAssertion(Faux,"Le contact demandé est inexistant !")
      	RENVOYER Null
      SINON
      	RENVOYER gtaListeContact[nIDContact]
      FIN
      
     type : 458752
   -
     name : Contact_ChargeListe
     procedure_id : 2295164780217222663
     type_code : 15
     code : |1-
      // Résumé : Retourne la liste des contacts
      // Syntaxe :
      //[ <Résultat> = ] Contact_ChargeListe ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	tableau associatif :  // 	Aucune
      
      PROCÉDURE Contact_ChargeListe()
      
      // Sauvegarde contexte
      nPosition  est un entier = HSauvePosition(Contact,"*",hSauveRubriques)
      
      // Variables
      pclContact est un cContact dynamique = Null
      
      SI gtaListeContact..Occurrence = 0 ALORS
      	// Instancie la liste des contacts
      	HLitPremier(Contact)
      	TANTQUE PAS HEnDehors(Contact)
      		// Allocation
      		pclContact = allouer un cContact(Contact.IDContact)
      		
      		// Ajoute dans la liste
      		gtaListeContact[Contact.IDContact] = pclContact
      		
      		// Compte suivant
      		HLitSuivant(Contact)
      	FIN	
      FIN
      
      RENVOYER gtaListeContact
      
      FIN:
      	HRetourPosition(nPosition)
     type : 458752
   -
     name : Contact_Cherche
     procedure_id : 2303003928646408848
     type_code : 15
     code : |1-
      procédure Contact_Cherche( sEmail est une chaine )
      
      tabContact est un tableau de cContact dynamique
      
      pour tout pclContact de gtaListeContact
      	si Contient(pclContact.Email,sEmail,SansCasse) ALORS
      		tabContact.ajoute(pclContact)
      	FIN
      FIN
      
      
      renvoyer tabContact
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : COL_SansNom1
resources :
 string_res :
  identifier : 0x1fda101c11ce6559
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
